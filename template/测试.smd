---
title: "在 Markdown 中使用 Stata"
author: "微信公众号 RStata"
date: "`r Sys.Date()`"
output: tidyfridoc2::html_pretty
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      dpi = 400,
                      warning = FALSE,
                      message = FALSE,
                      # out.width = "100%",
                      # out.height = "500px",
                      fig.align = 'center',
                      attr.output = ".comment",
                      comment = "#>")
```

这篇文档用以测试在 Markdown 文件中插入 Stata 代码，然后进行编译。编译过程中会自动执行代码、保存代码输出结果、保存图片，然后再把结果和图片插入到文档中。不过在这个过程中也要遵循一些基本规则。

## 整体 Stata 代码

Stata 中通常使用 `///` 符号进行代码换行，不过也有一些例外，例如编写 program，这种情况需要使用 `{stata asis}` 来声明代码块，例如：

```{stata asis}
cap program drop myexp_lf 
program myexp_lf
  version 14
  args lnfj lambda 
  quietly replace `lnfj' = log(`lambda') - `lambda' * $ML_y1
end 
```

input 输入数据的时候也经常会遇到这个问题：

```{stata asis}
clear
input y
2.1
2.2
3.1
1.6
2.5
0.5
end
```

整篇文档的代码会被作为一个整体运行，所以不同代码块里面的代码是可以连贯运行的：

```{stata}
ml model lf myexp_lf (y = ) 
ml maximize, nolog 
```

当代码块被声明为 `{stata asis}` 的时候，这部分代码会直接保存到结果文档中，因此不能把含有结果输出的代码放到这个代码块里面，否则你讲不会得到任何结果输出。

```{stata asis}
clear 
input x1 x2 y
1  0  0
1  1  1
0  0  0
0  1  0
end 
```

于是，我们单独放置回归代码，这样才能确保输出结果也保存到结果文档中：

```{stata}
reg y x1 x2 
```

## 普通代码（有文本结果输出）

普通代码块使用 `{stata}` 直接声明即可。

下面是一段需要执行的代码：

```{stata}
sysuse auto, clear 
list price weight rep78 in 1/10
```

不想要执行的代码需要使用 `stata` 声明：

```stata
这是一段不想要被执行的代码，毕竟直接执行会报错！
```

## 绘图代码（有图表输出）

不管是否有图表生成，每个代码块在编译的时候都会被尝试保存图片，因此不要把多个图表生成代码放到一个代码块里面，否则也是会产生错误的结果。

如果该代码块有图表生成，程序会自动把结果插入到结果文档中：

```{stata}
sysuse auto, clear 
tw ///
sc price weight || ///
lfit price weight, ///
    ti("标题测试") ///
    yti("y 轴标题", ///
        size(*2))
```

不使用 `///` 进行代码换行也是可以的：

```{stata}
sysuse auto, clear 
tw sc price weight || lfit price weight
```

再例如使用 coefplot 命令绘图：

```{stata}
sysuse auto

regress price mpg headroom trunk ///
    length turn if foreign == 0

estimates store domestic 

regress price mpg headroom trunk length turn if foreign==1
estimates store foreign

coefplot domestic foreign, xline(0)
```

由于一些特殊的原因，代码换行后的缩进建议使用四个空格而非制表符，否则会得到不美观的输出结果。

## 超长结果输出测试

下面是一段超长的代码输出测试：

```{stata}
di "这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码这是一段无比无比无比长的代码"
```

也可以得到比较美观的结果。

## 数学公式

行内公式使用方法，比如这个化学公式：\(a^2 + b^2 = c^2\)(`\(a^2 + b^2 = c^2\)`)，也可以用美元符号：$a^2 + b^2 = c^2$(`$a^2 + b^2 = c^2$`)

块公式使用方法如下：

\[H(D_2) = -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) = 1\]

矩阵：

\[
  \begin{pmatrix}
  1 & a_1 & a_1^2 & \cdots & a_1^n \\
  1 & a_2 & a_2^2 & \cdots & a_2^n \\
  \vdots & \vdots & \vdots & \ddots & \vdots \\
  1 & a_m & a_m^2 & \cdots & a_m^n \\
  \end{pmatrix}
\]

块公式用 `$$ ... $$` 也是可以的。

## R 语言代码

由于该程序是使用 RMarkdown 进行编译的，所以 R 语言的代码也可以用于其中：

```{r}
# 设置字体
library(showtext)
showtext_auto(enable = TRUE)
font_add("cnfont", bold = "~/Library/Fonts/LXGWWenKai-Medium.ttf",
         regular = "~/Library/Fonts/LXGWWenKai-Regular.ttf",
         italic = "~/Library/Fonts/LXGWWenKai-Light.ttf")
font_add("enfont", regular = "/Users/ac/Documents/font/CascadiaCode-Regular-VTT.ttf")

library(rvest)
library(tidyverse)
# lubridate 是处理日期的一个 R 包
library(lubridate)
library(hrbrthemes)

# 需要耐心地等待一会儿
pkg <- "https://mirrors.tuna.tsinghua.edu.cn/CRAN/web/packages/available_packages_by_date.html" %>%
  read_html() %>%
  html_table() %>%
  .[[1]] %>%
  as_tibble() %>%
  mutate(
    Date = ymd(Date),
    Year = year(Date),
    Month = month(Date)
  )

library(ggchicklet)
pkg %>% 
  subset(Year > year(today()) - 8) %>% 
  group_by(Year, Month) %>%
  count() %>%
  ggplot(aes(x = factor(Year), y = n)) +
  geom_chicklet(aes(fill = factor(Month)),
                width = 0.75,
                radius = grid::unit(3, "pt")) + 
  coord_flip() +
  scale_fill_manual(name = "Month",
                    values = c("#4E79A7FF", "#A0CBE8FF",
                               "#F28E2BFF", "#FFBE7DFF",
                               "#59A14FFF", "#8CD17DFF",
                               "#B6992DFF", "#F1CE63FF",
                               "#499894FF", "#86BCB6FF", 
                               "#E15759FF", "#FF9D9AFF"),
                    breaks = 1:12,
                    labels = month.name) +
  theme_ipsum(base_family = "cnfont") + 
  theme(axis.text.x = element_text(color = "gray60",
                                   size = 10)) +
  theme(legend.position = "right",
        legend.title = element_blank(),
        legend.box.background = element_blank(),
        legend.background = element_blank(),
        panel.background = element_blank()) +
  guides(fill = guide_legend(ncol = 1)) +
  labs(
    title = "Number of R packages on CRAN",
    subtitle = "绘制：微信公众号 RStata",
    caption = "Data Source: \nhttps://mirrors.tuna.tsinghua.edu.cn/CRAN/",
    x = "",
    y = "") 
```
